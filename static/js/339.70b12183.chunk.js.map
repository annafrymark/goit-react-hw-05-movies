{"version":3,"file":"static/js/339.70b12183.chunk.js","mappings":"sPACA,EAA6B,yBAA7B,EAA8D,oB,SCkD9D,EA9Ca,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,CAC/B,CACEC,KAAM,GACNC,UAAW,GACXC,GAAI,GACJC,aAAc,QALlB,eAAOC,EAAP,KAAaC,EAAb,KASMC,EAAe,mCAAG,8GAEEC,EAAAA,EAAAA,IAAqBV,GAFvB,OAEhBW,EAFgB,OAGpBH,EAAQG,GAHY,gDAKpBC,QAAQC,IAAR,MALoB,yDAAH,qDAarB,OAJAC,EAAAA,EAAAA,YAAU,WACRL,GACD,KAGC,0BACE,eAAIM,UAAWC,EAAf,SACGT,EAAKU,KAAI,SAAAC,GAAK,OACb,gBAAmBH,UAAWC,EAA9B,WACE,gBACEG,IACED,EAAMZ,aAAN,0CACuCY,EAAMZ,cACzC,6EAENc,IAAI,WAEN,uBAAIF,EAAMf,QACV,uCAAee,EAAMd,eAVdc,EAAMb,GADF,OAiBtB,C,+LChDGgB,EAAS,mCAKbC,EAAAA,EAAAA,SAAAA,QAAA,+BAEO,IAAMC,EAAoB,mCAAG,WAAMC,GAAN,0EACd,OAAhBA,EAD8B,gCAETF,EAAAA,EAAAA,IAAA,gCACID,EADJ,kBACoBG,IAHX,cAE1BC,EAF0B,yBAKzBA,EAASC,KAAKC,SALW,gCAOzB,IAPyB,2CAAH,sDAWpBC,EAAmB,mCAAG,oGACVN,EAAAA,EAAAA,IAAA,sCAAyCD,IAD/B,cAC3BI,EAD2B,yBAE1BA,EAASC,KAAKC,SAFY,2CAAH,qDAKnBE,EAAiB,mCAAG,WAAM7B,GAAN,uFACRsB,EAAAA,EAAAA,IAAA,iBACXtB,EADW,qBACSqB,EADT,oBADQ,cACzBI,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,sDAOjBhB,EAAoB,mCAAG,WAAMV,GAAN,uFACXsB,EAAAA,EAAAA,IAAA,iBACXtB,EADW,4BACgBqB,EADhB,oBADW,cAC5BI,EAD4B,yBAI3BA,EAASC,KAAKnB,MAJa,2CAAH,sDAOpBuB,EAAsB,mCAAG,WAAM9B,GAAN,uFACbsB,EAAAA,EAAAA,IAAA,iBACXtB,EADW,4BACgBqB,EADhB,oBADa,cAC9BI,EAD8B,yBAK7BA,EAASC,KAAKC,SALe,2CAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/pages/cast/Cast.module.css?3f37","pages/cast/Cast.jsx","utils/GetInfo.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"actorsList\":\"Cast_actorsList__xywLK\",\"actor\":\"Cast_actor__zKbhc\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCastWithMovieId } from 'utils/GetInfo';\nimport css from './Cast.module.css';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([\n    {\n      name: '',\n      character: '',\n      id: '',\n      profile_path: null,\n    },\n  ]);\n\n  const searchMovieCast = async () => {\n    try {\n      let movieCast = await fetchCastWithMovieId(movieId);\n      setCast(movieCast);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    searchMovieCast();\n  });\n\n  return (\n    <div>\n      <ul className={css.actorsList}>\n        {cast.map(actor => (\n          <li key={actor.id} className={css.actor}>\n            <img\n              src={\n                actor.profile_path\n                  ? `https://image.tmdb.org/t/p/w200/${actor.profile_path}`\n                  : 'http://tinleychamber.org/wp-content/uploads/2019/01/no-image-available.png'\n              }\n              alt=\"actor\"\n            />\n            <p>{actor.name}</p>\n            <p>Character: {actor.character}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\nlet apiKey = 'ede5208378a65a6fc273c11c764d424b';\n\n// Example API Request\n// https://api.themoviedb.org/3/movie/550?api_key=ede5208378a65a6fc273c11c764d424b\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\n\nexport const fetchMoviesWithQuery = async searchQuery => {\n  if (searchQuery !== null) {\n    const response = await axios.get(\n      `/search/movie?api_key=${apiKey}&query=${searchQuery}`\n    );\n    return response.data.results;\n  } else {\n    return [];\n  }\n};\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${apiKey}`);\n  return response.data.results;\n};\n\nexport const fetchMoviesWithId = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}?&api_key=${apiKey}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchCastWithMovieId = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${apiKey}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchReviewWithMovieId = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${apiKey}&language=en-US`\n  );\n\n  return response.data.results;\n};\n"],"names":["movieId","useParams","useState","name","character","id","profile_path","cast","setCast","searchMovieCast","fetchCastWithMovieId","movieCast","console","log","useEffect","className","css","map","actor","src","alt","apiKey","axios","fetchMoviesWithQuery","searchQuery","response","data","results","fetchTrendingMovies","fetchMoviesWithId","fetchReviewWithMovieId"],"sourceRoot":""}