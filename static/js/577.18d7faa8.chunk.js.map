{"version":3,"file":"static/js/577.18d7faa8.chunk.js","mappings":"8PACA,EAAuB,qBAAvB,EAAwD,0B,SCqExD,EAhEe,WACb,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BL,EAAAA,EAAAA,UAAS,MAAnC,eAAOM,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,8GAEUC,EAAAA,EAAAA,IACzBR,EAAaS,IAAI,UAHF,OAEbC,EAFa,OAKjBZ,EAAUY,GALO,gDAOjBP,EAAS,EAAD,IAPS,yDAAH,qDAUlBI,GACD,GAAE,CAACP,IAUJ,OACE,iCACE,kBAAMW,UAAWC,EAAUC,SAVV,SAAAC,GACnBA,EAAMC,iBACN,IAAMC,EAAcF,EAAMG,OAAO,GAAGC,MACZjB,EAAJ,KAAhBe,EAAoC,CAAEG,MAAOH,GAC5B,CAAC,GACtBF,EAAMG,OAAO,GAAGC,MAAQ,EACzB,EAIG,WACE,kBAGEE,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,mBAEd,mBAAQH,KAAK,SAAb,UACE,0CAGHlB,IAAS,yBAAMA,EAAMsB,WACtB,eAAIb,UAAWC,EAAf,SACGf,EAAO4B,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CACEC,GAAE,UAAKD,EAAME,IACbC,MAAO,CACLC,KAAM1B,GAHV,SAOGsB,EAAMK,MAAQL,EAAMM,SARhBN,EAAME,GADA,QAgBxB,C,+LClEGK,EAAS,mCAKbC,EAAAA,EAAAA,SAAAA,QAAA,+BAEO,IAAM1B,EAAoB,mCAAG,WAAM2B,GAAN,0EACd,OAAhBA,EAD8B,gCAETD,EAAAA,EAAAA,IAAA,gCACID,EADJ,kBACoBE,IAHX,cAE1BC,EAF0B,yBAKzBA,EAASC,KAAKC,SALW,gCAOzB,IAPyB,2CAAH,sDAWpBC,EAAmB,mCAAG,oGACVL,EAAAA,EAAAA,IAAA,sCAAyCD,IAD/B,cAC3BG,EAD2B,yBAE1BA,EAASC,KAAKC,SAFY,2CAAH,qDAKnBE,EAAiB,mCAAG,WAAMC,GAAN,uFACRP,EAAAA,EAAAA,IAAA,iBACXO,EADW,qBACSR,EADT,oBADQ,cACzBG,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,sDAOjBK,EAAoB,mCAAG,WAAMD,GAAN,uFACXP,EAAAA,EAAAA,IAAA,iBACXO,EADW,4BACgBR,EADhB,oBADW,cAC5BG,EAD4B,yBAI3BA,EAASC,KAAKM,MAJa,2CAAH,sDAOpBC,EAAsB,mCAAG,WAAMH,GAAN,uFACbP,EAAAA,EAAAA,IAAA,iBACXO,EADW,4BACgBR,EADhB,oBADa,cAC9BG,EAD8B,yBAK7BA,EAASC,KAAKC,SALe,2CAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/pages/movies/Movies.module.css?c186","pages/movies/Movies.jsx","utils/GetInfo.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Movies_form__utRLM\",\"movieList\":\"Movies_movieList__BdVeI\"};","import { useState, useEffect } from 'react';\nimport { fetchMoviesWithQuery } from 'utils/GetInfo';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport css from './Movies.module.css';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [error, setError] = useState(null);\n  const location = useLocation();\n\n  useEffect(() => {\n    const searchMovies = async () => {\n      try {\n        let searchedMovies = await fetchMoviesWithQuery(\n          searchParams.get('query')\n        );\n        setMovies(searchedMovies);\n      } catch (error) {\n        setError(error);\n      }\n    };\n    searchMovies();\n  }, [searchParams]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const searchInput = event.target[0].value;\n    if (searchInput !== '') setSearchParams({ query: searchInput });\n    else setSearchParams({});\n    event.target[0].value = '';\n  };\n\n  return (\n    <>\n      <form className={css.form} onSubmit={handleSubmit}>\n        <input\n          // value={inputValue}\n          // onChange={handleChange}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n        />\n        <button type=\"submit\">\n          <span>Search</span>\n        </button>\n      </form>\n      {error && <div>{error.message}</div>}\n      <ul className={css.movieList}>\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <Link\n              to={`${movie.id}`}\n              state={{\n                from: location,\n                // from: `/goit-react-hw-05-movies/movies?${searchParams}`,\n              }}\n            >\n              {movie.name || movie.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\n//'/movies' - komponent Movies, strona wyszukiwania filmów po słowie kluczu.\nexport default Movies;\n","import axios from 'axios';\nlet apiKey = 'ede5208378a65a6fc273c11c764d424b';\n\n// Example API Request\n// https://api.themoviedb.org/3/movie/550?api_key=ede5208378a65a6fc273c11c764d424b\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\n\nexport const fetchMoviesWithQuery = async searchQuery => {\n  if (searchQuery !== null) {\n    const response = await axios.get(\n      `/search/movie?api_key=${apiKey}&query=${searchQuery}`\n    );\n    return response.data.results;\n  } else {\n    return [];\n  }\n};\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${apiKey}`);\n  return response.data.results;\n};\n\nexport const fetchMoviesWithId = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}?&api_key=${apiKey}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchCastWithMovieId = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${apiKey}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchReviewWithMovieId = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${apiKey}&language=en-US`\n  );\n\n  return response.data.results;\n};\n"],"names":["useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","error","setError","location","useLocation","useEffect","searchMovies","fetchMoviesWithQuery","get","searchedMovies","className","css","onSubmit","event","preventDefault","searchInput","target","value","query","type","autoComplete","autoFocus","placeholder","message","map","movie","to","id","state","from","name","title","apiKey","axios","searchQuery","response","data","results","fetchTrendingMovies","fetchMoviesWithId","movieId","fetchCastWithMovieId","cast","fetchReviewWithMovieId"],"sourceRoot":""}