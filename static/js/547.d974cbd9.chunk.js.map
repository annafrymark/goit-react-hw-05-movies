{"version":3,"file":"static/js/547.d974cbd9.chunk.js","mappings":"2RAGMA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,4QAgBHE,EAAW,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SAC7B,OAAO,SAACL,EAAD,CAAYI,GAAIA,EAAhB,SAAqBC,GAC7B,ECpBD,GAAgB,UAAY,gCAAgC,aAAe,mCAAmC,OAAS,6BAA6B,OAAS,8BC4E7J,EArEqB,WAAO,IAAD,IACzB,GAAwCC,EAAAA,EAAAA,UAAS,CAC/CC,MAAO,GACPC,aAAc,GACdC,aAAc,GACdC,SAAU,GACVC,OAAQ,KALV,eAAOC,EAAP,KAAqBC,EAArB,KAOA,GAAgCP,EAAAA,EAAAA,UAAS,IAAzC,eAAOQ,EAAP,KAAiBC,EAAjB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,EAAkB,mCAAG,8GAEEC,EAAAA,EAAAA,IAAkBH,GAFpB,OAEnBJ,EAFmB,OAGvBC,EAAgBD,GAChBG,EAAY,mCAAD,OAC0BH,EAAaQ,cAL3B,gDAQvBC,QAAQC,IAAR,MARuB,yDAAH,sDAYxBC,EAAAA,EAAAA,YAAU,WACRL,GACD,IAED,IAEOM,EAAY,qBAFFC,EAAAA,EAAAA,MAEcC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAE9C,OACE,iBAAKC,UAAWC,EAAAA,UAAhB,WACE,SAAC1B,EAAD,CAAUC,GAAIoB,EAAd,6BAGA,iBAAKI,UAAWC,EAAAA,aAAhB,WACE,gBAAKD,UAAWC,EAAAA,OAAYC,IAAKhB,EAAUiB,IAAI,kBAC/C,4BACE,0BACGnB,EAAaL,MADhB,KACyBK,EAAaJ,aAAawB,MAAM,EAAG,GAD5D,QAGA,wCAAgBpB,EAAaH,iBAC7B,sCACA,uBAAIG,EAAaF,YACjB,oCACA,cAAGkB,UAAWC,EAAAA,OAAd,SACGjB,EAAaD,OAAOsB,KAAI,SAAAC,GAAK,OAC5B,0BAAsBA,EAAMC,MAAjBD,EAAME,GADW,aAMpC,iBAAKR,UAAWC,EAAAA,eAAhB,WACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMzB,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,SAAC,KAAD,SAIP,C,+LC1EGiC,EAAS,mCAKbC,EAAAA,EAAAA,SAAAA,QAAA,+BAEO,IAAMC,EAAoB,mCAAG,WAAMC,GAAN,0EACd,OAAhBA,EAD8B,gCAETF,EAAAA,EAAAA,IAAA,gCACID,EADJ,kBACoBG,IAHX,cAE1BC,EAF0B,yBAKzBA,EAASC,KAAKC,SALW,gCAOzB,IAPyB,2CAAH,sDAWpBC,EAAmB,mCAAG,oGACVN,EAAAA,EAAAA,IAAA,sCAAyCD,IAD/B,cAC3BI,EAD2B,yBAE1BA,EAASC,KAAKC,SAFY,2CAAH,qDAKnBxB,EAAiB,mCAAG,WAAMH,GAAN,uFACRsB,EAAAA,EAAAA,IAAA,iBACXtB,EADW,qBACSqB,EADT,oBADQ,cACzBI,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,sDAOjBG,EAAoB,mCAAG,WAAM7B,GAAN,uFACXsB,EAAAA,EAAAA,IAAA,iBACXtB,EADW,4BACgBqB,EADhB,oBADW,cAC5BI,EAD4B,yBAI3BA,EAASC,KAAKI,MAJa,2CAAH,sDAOpBC,EAAsB,mCAAG,WAAM/B,GAAN,uFACbsB,EAAAA,EAAAA,IAAA,iBACXtB,EADW,4BACgBqB,EADhB,oBADa,cAC9BI,EAD8B,yBAK7BA,EAASC,KAAKC,SALe,2CAAH,qD","sources":["components/BackLink.jsx","webpack://goit-react-hw-05-movies/./src/pages/movieDetails/MovieDetails.module.css?3b61","pages/movieDetails/MovieDetails.jsx","utils/GetInfo.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transformation: uppercase;\n  margin-left: 10px;\n\n  :hover {\n    color: orangered;\n  }\n`;\n\nexport const BackLink = ({ to, children }) => {\n  return <StyledLink to={to}>{children}</StyledLink>;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MovieDetails_container__uHDv9\",\"movieDetails\":\"MovieDetails_movieDetails__YUgVh\",\"poster\":\"MovieDetails_poster__ZcBYj\",\"genres\":\"MovieDetails_genres__Xta9S\"};","import { useState, useEffect } from 'react';\nimport { Link, Outlet } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport { fetchMoviesWithId } from 'utils/GetInfo';\nimport { BackLink } from 'components/BackLink';\nimport css from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState({\n    title: '',\n    release_date: '',\n    vote_average: '',\n    overview: '',\n    genres: [],\n  });\n  const [imageUrl, setImageUrl] = useState('');\n  const { movieId } = useParams();\n\n  const searchMovieDetails = async () => {\n    try {\n      let movieDetails = await fetchMoviesWithId(movieId);\n      setMovieDetails(movieDetails);\n      setImageUrl(\n        `https://image.tmdb.org/t/p/w300/${movieDetails.poster_path}`\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    searchMovieDetails();\n  });\n\n  const location = useLocation();\n  //console.log(location.state);\n   const backLinkHref = location.state?.from ?? '/';\n\n  return (\n    <div className={css.container}>\n      <BackLink to={backLinkHref}>\n        &#x2190; Go back\n      </BackLink>\n      <div className={css.movieDetails}>\n        <img className={css.poster} src={imageUrl} alt=\"movie poster\" />\n        <div>\n          <h3>\n            {movieDetails.title} ({movieDetails.release_date.slice(0, 4)})\n          </h3>\n          <p>User score: {movieDetails.vote_average}</p>\n          <h4>Overview</h4>\n          <p>{movieDetails.overview}</p>\n          <h4>Genres</h4>\n          <p className={css.genres}>\n            {movieDetails.genres.map(genre => (\n              <span key={genre.id}>{genre.name}</span>\n            ))}\n          </p>\n        </div>\n      </div>\n      <div className={css.additionalInfo}>\n        <h4>Additional information</h4>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n        <Outlet />\n      </div>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\nlet apiKey = 'ede5208378a65a6fc273c11c764d424b';\n\n// Example API Request\n// https://api.themoviedb.org/3/movie/550?api_key=ede5208378a65a6fc273c11c764d424b\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\n\nexport const fetchMoviesWithQuery = async searchQuery => {\n  if (searchQuery !== null) {\n    const response = await axios.get(\n      `/search/movie?api_key=${apiKey}&query=${searchQuery}`\n    );\n    return response.data.results;\n  } else {\n    return [];\n  }\n};\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${apiKey}`);\n  return response.data.results;\n};\n\nexport const fetchMoviesWithId = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}?&api_key=${apiKey}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchCastWithMovieId = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${apiKey}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchReviewWithMovieId = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${apiKey}&language=en-US`\n  );\n\n  return response.data.results;\n};\n"],"names":["StyledLink","styled","Link","BackLink","to","children","useState","title","release_date","vote_average","overview","genres","movieDetails","setMovieDetails","imageUrl","setImageUrl","movieId","useParams","searchMovieDetails","fetchMoviesWithId","poster_path","console","log","useEffect","backLinkHref","useLocation","state","from","className","css","src","alt","slice","map","genre","name","id","apiKey","axios","fetchMoviesWithQuery","searchQuery","response","data","results","fetchTrendingMovies","fetchCastWithMovieId","cast","fetchReviewWithMovieId"],"sourceRoot":""}