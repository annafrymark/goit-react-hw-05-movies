{"version":3,"file":"static/js/309.04291897.chunk.js","mappings":"yNAuCA,UAnCgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAEMC,EAAa,mCAAG,8GAEEC,EAAAA,EAAAA,IAAuBN,GAFzB,OAEdG,EAFc,OAGlBC,EAAWD,GAHO,gDAKlBI,QAAQC,IAAR,MALkB,yDAAH,qDAanB,OAJAC,EAAAA,EAAAA,YAAU,WACRJ,GACD,KAGC,yBACsB,IAAnBF,EAAQO,QACP,sEAEA,wBACGP,EAAQQ,KAAI,SAAAC,GAAM,OACjB,2BACE,oCAAYA,EAAOC,WACnB,uBAAID,EAAOE,YAFJF,EAAOG,GADC,OAU5B,C,+LCpCGC,EAAS,mCAKbC,EAAAA,EAAAA,SAAAA,QAAA,+BAEO,IAAMC,EAAoB,mCAAG,WAAMC,GAAN,0EACd,OAAhBA,EAD8B,gCAETF,EAAAA,EAAAA,IAAA,gCACID,EADJ,kBACoBG,IAHX,cAE1BC,EAF0B,yBAKzBA,EAASC,KAAKC,SALW,gCAOzB,IAPyB,2CAAH,sDAWpBC,EAAmB,mCAAG,oGACVN,EAAAA,EAAAA,IAAA,sCAAyCD,IAD/B,cAC3BI,EAD2B,yBAE1BA,EAASC,KAAKC,SAFY,2CAAH,qDAKnBE,EAAiB,mCAAG,WAAMxB,GAAN,uFACRiB,EAAAA,EAAAA,IAAA,iBACXjB,EADW,qBACSgB,EADT,oBADQ,cACzBI,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,sDAOjBI,EAAoB,mCAAG,WAAMzB,GAAN,uFACXiB,EAAAA,EAAAA,IAAA,iBACXjB,EADW,4BACgBgB,EADhB,oBADW,cAC5BI,EAD4B,yBAI3BA,EAASC,KAAKK,MAJa,2CAAH,sDAOpBpB,EAAsB,mCAAG,WAAMN,GAAN,uFACbiB,EAAAA,EAAAA,IAAA,iBACXjB,EADW,4BACgBgB,EADhB,oBADa,cAC9BI,EAD8B,yBAK7BA,EAASC,KAAKC,SALe,2CAAH,qD","sources":["pages/reviews/Reviews.jsx","utils/GetInfo.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviewWithMovieId } from 'utils/GetInfo';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  const searchReviews = async () => {\n    try {\n      let reviews = await fetchReviewWithMovieId(movieId);\n      setReviews(reviews);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    searchReviews();\n  });\n\n  return (\n    <div>\n      {reviews.length === 0 ? (\n        <p>We don't have any reviews for this movie.</p>\n      ) : (\n        <ul>\n          {reviews.map(review => (\n            <li key={review.id}>\n              <p>Author: {review.author}</p>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\nlet apiKey = 'ede5208378a65a6fc273c11c764d424b';\n\n// Example API Request\n// https://api.themoviedb.org/3/movie/550?api_key=ede5208378a65a6fc273c11c764d424b\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\n\nexport const fetchMoviesWithQuery = async searchQuery => {\n  if (searchQuery !== null) {\n    const response = await axios.get(\n      `/search/movie?api_key=${apiKey}&query=${searchQuery}`\n    );\n    return response.data.results;\n  } else {\n    return [];\n  }\n};\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${apiKey}`);\n  return response.data.results;\n};\n\nexport const fetchMoviesWithId = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}?&api_key=${apiKey}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchCastWithMovieId = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${apiKey}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchReviewWithMovieId = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${apiKey}&language=en-US`\n  );\n\n  return response.data.results;\n};\n"],"names":["movieId","useParams","useState","reviews","setReviews","searchReviews","fetchReviewWithMovieId","console","log","useEffect","length","map","review","author","content","id","apiKey","axios","fetchMoviesWithQuery","searchQuery","response","data","results","fetchTrendingMovies","fetchMoviesWithId","fetchCastWithMovieId","cast"],"sourceRoot":""}